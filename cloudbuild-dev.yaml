steps:
  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker build -t asia-northeast1-docker.pkg.dev/${PROJECT_ID}/stark-tech/${REPO_NAME}/${BRANCH_NAME}/${COMMIT_SHA} . --build-arg API_KEY_PREFIX=$(cat _API_KEY_PREFIX \
      - --build-arg EMAIL_FROM=$(cat _EMAIL_FROM) \
      - --build-arg EMAIL_SERVER_HOST=$(cat _EMAIL_SERVER_HOST) \
      - --build-arg EMAIL_SERVER_PORT=$(cat _EMAIL_SERVER_PORT) \
      - --build-arg NEXT_PUBLIC_EMBED_LIB_URL=$(cat _NEXT_PUBLIC_EMBED_LIB_URL) \
      - --build-arg NEXT_PUBLIC_WEBAPP_URL=$(cat _NEXT_PUBLIC_WEBAPP_URL) \
      - --build-arg NEXT_PUBLIC_WEBSITE_URL=$(cat _NEXT_PUBLIC_WEBSITE_URL) \
      - --build-arg NEXTAUTH_COOKIE_DOMAIN=$(cat _NEXTAUTH_COOKIE_DOMAIN) \
      - --build-arg NEXTAUTH_URL=$(cat _NEXTAUTH_URL) \
      - --build-arg NEXTAUTH_SECRET=$$NEXTAUTH_SECRET \
      - --build-arg CALENDSO_ENCRYPTION_KEY=$$CALENDSO_ENCRYPTION_KEY \
      - --build-arg DATABASE_URL=$$DATABASE_URL \
      - --build-arg EMAIL_SERVER_PASSWORD=$$EMAIL_SERVER_PASSWORD \
      - --build-arg EMAIL_SERVER_USER=$$EMAIL_SERVER_USER \
      - --build-arg GOOGLE_API_CREDENTIALS=$$GOOGLE_API_CREDENTIALS \
      - --build-arg CRON_API_KEY=$$CRON_API_KEY \
      - --build-arg ZOOM_CLIENT_ID=$$ZOOM_CLIENT_ID \
      - --build-arg ZOOM_CLIENT_SECRET=$$ZOOM_CLIENT_SECRET \
      - --build-arg NEXT_PUBLIC_LICENSE_CONSENT=agree \
      - --network=host'
    env:
      [
        'API_KEY_PREFIX=$_API_KEY_PREFIX',
        'EMAIL_FROM=$_EMAIL_FROM',
        'EMAIL_SERVER_HOST=$_EMAIL_SERVER_HOST',
        'EMAIL_SERVER_PORT=$_EMAIL_SERVER_PORT',
        'NEXT_PUBLIC_EMBED_LIB_URL=$_NEXT_PUBLIC_EMBED_LIB_URL',
        'NEXT_PUBLIC_WEBAPP_URL=$_NEXT_PUBLIC_WEBAPP_URL',
        'NEXT_PUBLIC_WEBSITE_URL=$_NEXT_PUBLIC_WEBSITE_URL',
        'NEXTAUTH_COOKIE_DOMAIN=$_NEXTAUTH_COOKIE_DOMAIN',
        'NEXTAUTH_URL=$_NEXTAUTH_URL',
      ]
    secretEnv:
      [
        'CALENDSO_ENCRYPTION_KEY',
        'DATABASE_URL',
        'EMAIL_SERVER_PASSWORD',
        'EMAIL_SERVER_USER',
        'GOOGLE_API_CREDENTIALS',
        'NEXTAUTH_SECRET',
        'CRON_API_KEY',
        'ZOOM_CLIENT_ID',
        'ZOOM_CLIENT_SECRET',
      ]

  # Docker Push
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/stark-tech/${REPO_NAME}/${BRANCH_NAME}/${COMMIT_SHA}',
      ]

  # deploy to cloud run, timeout and environment variables
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    timeout: 240s
    args:
      [
        'run',
        'deploy',
        'dbee-cal',
        '--image',
        'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/stark-tech/${REPO_NAME}/${BRANCH_NAME}/${COMMIT_SHA}',
        '--region',
        'asia-northeast1',
        '--port',
        '3000'
      ]

availableSecrets:
  secretManager:
    - versionName: projects/${PROJECT_NUMBER}/secrets/CALENDSO_ENCRYPTION_KEY/versions/latest
      env: CALENDSO_ENCRYPTION_KEY
    - versionName: projects/${PROJECT_NUMBER}/secrets/DATABASE_URL/versions/latest
      env: DATABASE_URL
    - versionName: projects/${PROJECT_NUMBER}/secrets/EMAIL_SERVER_PASSWORD/versions/latest
      env: EMAIL_SERVER_PASSWORD
    - versionName: projects/${PROJECT_NUMBER}/secrets/EMAIL_SERVER_USER/versions/latest
      env: EMAIL_SERVER_USER
    - versionName: projects/${PROJECT_NUMBER}/secrets/GOOGLE_API_CREDENTIALS/versions/latest
      env: GOOGLE_API_CREDENTIALS
    - versionName: projects/${PROJECT_NUMBER}/secrets/NEXTAUTH_SECRET/versions/latest
      env: NEXTAUTH_SECRET
    - versionName: projects/${PROJECT_NUMBER}/secrets/CRON_API_KEY/versions/latest
      env: CRON_API_KEY
    - versionName: projects/${PROJECT_NUMBER}/secrets/ZOOM_CLIENT_ID/versions/latest
      env: ZOOM_CLIENT_ID
    - versionName: projects/${PROJECT_NUMBER}/secrets/ZOOM_CLIENT_SECRET/versions/latest
      env: ZOOM_CLIENT_SECRET

images:
  - asia-northeast1-docker.pkg.dev/${PROJECT_ID}/stark-tech/${REPO_NAME}/${BRANCH_NAME}/${COMMIT_SHA}